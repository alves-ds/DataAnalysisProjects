dados_mudados <- nycflights %>%   mutate(avg_speed = distance/air_time)
View(dados_mudados)
View(dados_mudados)
avg_speed_flights <- dados_mudados %>% group_by(tailnum) %>% summarise(mean = mean(avg_speed))
View(avg_speed_flights)
View(dados_mudados)
#dados_mudados <- nycflights %>%   mutate(avg_speed = distance/air_time)
dados_2 <- nycflights %>%   mutate(fly_hours = air_time/60)
View(dados_2)
dados_mudados <- dados_2 %>%   mutate(avg_speed = distance/fly_hours)
#dados_mudados <- nycflights %>%   mutate(avg_speed = distance/air_time)
dados_2 <- dados %>%   mutate(fly_hours = air_time/60)
dados_mudados <- dados_2 %>%   mutate(avg_speed = distance/fly_hours)
View(dados_mudados)
avg_speed_flights <- dados_mudados %>% group_by(tailnum) %>% summarise(mean = mean(avg_speed))
View(avg_speed_flights)
ggplot(data = dados_mudados, aes(x = distance, y = avg_speed)) + geom_point
ggplot(data = dados_mudados, aes(x = distance, y = avg_speed)) + geom_point()
library(statsr)
library(dplyr)
library(ggplot2)
names(nycflights)
str(nycflights)
dados <- nycflights
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) + geom_histogram()
dep_delay_month <- nycflights %>% group_by(month) %>% summarise(mean = mean(dep_delay))
View(dep_delay_month)
dep_delay_month <- nycflights %>% group_by(month) %>% summarise(mean = mean(dep_delay))
View(dep_delay_month)
dep_delay_month_median <- nycflights %>% group_by(month) %>% summarise(median = median(dep_delay))
View(dep_delay_month_median)
dep_time_by_airport <- dados %>% group_by(origin) %>% summarise(mean = mean(dep_time))
View(dep_time_by_airport)
#dados_mudados <- nycflights %>%   mutate(avg_speed = distance/air_time)
dados_2 <- dados %>%   mutate(fly_hours = air_time/60)
View(dados_2)
dados_mudados <- dados_2 %>%   mutate(avg_speed = distance/fly_hours)
View(dados_mudados)
ggplot(data = dados_mudados, aes(x = distance, y = avg_speed)) + geom_point()
clear
clr
lcr
library(statsr)
library(dplyr)
library(ggplot2)
data(kobe_basket)
force(kobe_basket)
View(kobe_basket)
kobe_streak <- calc_streak(kobe_basket$shot)
View(kobe_streak)
View(kobe_basket)
View(kobe_streak)
ggplot(data = kobe_streak, aes(x = length)) +   geom_histogram(binwidth = 1)
coin_outcomes <- c("heads", "tails") sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c('heads', 'tails') sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c('heads', 'tails')
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
coin_outcomes <- c("heads", "tails")
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sample(coin_outcomes, size = 1, replace = TRUE)
sim_fair_coin <- sample(coin_outcomes, size = 100, replace = TRUE)
sim_fair_coin table(sim_fair_coin)
table(sim_fair_coin)
sim_unfair_coin <- sample(coin_outcomes, size = 100, replace = TRUE,prob = c(0.2, 0.8))
table(sim_unfair_coin)
shot_outcomes <- c("H", "M")
sim_basket <- sample(shot_outcomes, size = 1, replace = TRUE)
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
View(sim_streak)
ggplot(data = sim_streak, aes(x = length)) + geom_histogram(binwidth = 1)
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
ggplot(data = sim_streak, aes(x = length)) + geom_histogram(binwidth = 1)
sim_basket <- sample(shot_outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
sim_streak <- calc_streak(sim_basket)
ggplot(data = sim_streak, aes(x = length)) + geom_histogram(binwidth = 1)
ggplot(data = kobe_streak, aes(x = length)) +   geom_histogram(binwidth = 1)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
install.packages("sirt")
install.packages("mirt")
install.packages("ggmirt")
install.packages("ltm")
install.packages("eRm")
install.packages("TAM")
install.packages("tidyverse")
install.packages("cowplot")
install.packages("devtools")
install.packages("ggplot2")
devtools::install_github("masurp/ggmirt") #clique 1 para ALL caso seja necessário
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library("sirt")
library("mirt")
library("ggmirt")
devtools::install_github("masurp/ggmirt") #clique 1 para ALL caso seja necessário
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
head(d)
View(d)
write.csv(d, "C:\\Users\\Douglas Silva\\Downloads\\teste.csv", row.names=FALSE)
install.packages("sirt")
install.packages("mirt")
install.packages("ggmirt")
install.packages("ltm")
install.packages("eRm")
install.packages("TAM")
install.packages("tidyverse")
install.packages("cowplot")
install.packages("devtools")
install.packages("ggplot2")
install.packages("sirt")
install.packages("mirt")
install.packages("ggmirt")
install.packages("ltm")
install.packages("eRm")
install.packages("TAM")
install.packages("tidyverse")
install.packages("cowplot")
install.packages("devtools")
install.packages("ggplot2")
devtools::install_github("masurp/ggmirt")
install.packages("tidyverse")
install.packages("tidyverse")
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
head(d)
View(d)
unimodel <- 'F1 = 1-10'
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
fit3PL
write.csv(d, "D:\Projeto_mestrado\Disciplinas Mestrado\Primeiro semestre de 2023\Estatística aplicada à psicobio III\Listas práticas\Lista 2\\teste.csv", row.names=FALSE)
write.csv(d, "D:\\Projeto_mestrado\\Disciplinas Mestrado\\Primeiro semestre de 2023\\Estatística aplicada à psicobio III\\Listas práticas\\Lista 2\\teste.csv", row.names=FALSE)
summary(fit3PL)
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
head(d)
View(d)
unimodel <- 'F1 = 1-10'
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
fit3PL
summary(fit3PL)
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
View(params3PL)
round(params3PL$items, 2)
round(params3PL$items, 3)
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
round(params3PL$items, 3)
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
round(params3PL$items, 4)
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
head(d)
#TRI 3 parametros
unimodel <- 'F1 = 1-10'
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
fit3PL
summary(fit3PL)
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
round(params3PL$items, 4)
round(params3PL$items, 3)
round(params3PL$items, 2)
round(params3PL$items, 4)
round(params3PL$items, 1)
round(params3PL$items, 2)
round(params3PL$items, 3)
round(params3PL$items, 4)
round(params3PL$items, 3)
round(params3PL$items, 4)
round(params3PL$items, 5)
round(params3PL$items, 4)
tracePlot(fit3PL, facet = F, legend = T) + scale_color_brewer(palette = "Set3")
#itempersonMap(fit3PL)
tracePlot(fit3PL)
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
head(d)
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
unimodel <- 'F1 = 1-10'
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
fit3PL
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
round(params3PL$items, 4)
M2(fit3PL)
a <- M2(fit3PL)
View(a)
itemfit(fit3PL)
mirt::itemfit(fit3PL)
View(a)
#itempersonMap(fit3PL)
tracePlot(fit3PL)
tracePlot(fit3PL, facet = F, legend = T) + scale_color_brewer(palette = "Set3")
itemInfoPlot(fit3PL) + scale_color_brewer(palette = "Set3")
itemInfoPlot(fit3PL, facet = T)
testInfoPlot(fit3PL, adj_factor = 2)
scaleCharPlot(fit3PL)
fit2PL <- mirt(d, 1, itemtype = "2PL", verbose = F)
fit2PL
b <- fit2PL
View(b)
View(fit2PL)
View(a)
fit2PL
fit3PL
anova(fit2PL, fit3PL)
coef(fit2PL, IRTpars = TRUE, simplify = TRUE)
a<- coef(fit2PL, IRTpars = TRUE, simplify = TRUE)
View(a)
fitRasch <- mirt(d, 1, itemtype = "Rasch", verbose = T)
fitRasch
anova(fitRasch, fit2PL)
anova(fitRasch, fit3PL)
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
set.seed(42)
d <- sim_irt(500, 10, discrimination = .25, seed = 42)
unimodel <- 'F1 = 1-10'
fit3PL <- mirt(data = d,
model = unimodel,
itemtype = "3PL",
verbose = FALSE)
params3PL <- coef(fit3PL, IRTpars = TRUE, simplify = TRUE)
round(params3PL$items, 4)
#itempersonMap(fit3PL)
tracePlot(fit3PL)
tracePlot(fit3PL, facet = F, legend = T) + scale_color_brewer(palette = "Set3")
M2(fit3PL)
a <- M2(fit3PL)
View(a)
mirt::itemfit(fit3PL)
itemfit(fit3PL, fit_stats = "infit")
mirt::itemfit(fit3PL)
itemfit(fit3PL, fit_stats = "infit")
mirt::itemfit(fit3PL, fit_stats = "infit")
itemfitPlot(fit3PL)
#itempersonMap(fit3PL)
tracePlot(fit3PL)
tracePlot(fit3PL, facet = F, legend = T) + scale_color_brewer(palette = "Set3")
tracePlot(fit3PL, facet = F, legend = T) + scale_color_brewer(palette = "Set3") + geom_line(size = 2)
itemInfoPlot(fit3PL) + scale_color_brewer(palette = "Set3")
itemInfoPlot(fit3PL, facet = T)
testInfoPlot(fit3PL, adj_factor = 2)
View(d)
set.seed(9102015)
library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
data(ames)
n <- 60
samp <- sample_n(ames, n)
View(samp)
View(samp)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
force(nc)
force(nc)
View(nc)
str(nc)
summary(nc$gained)
hist(nc$gained)
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
dados <- data(nc)
ggplot(data = dados, aes(x = habit)) + boxplot()
View(nc)
ggplot(data = nc, aes(x = habit)) + boxplot()
?boxplot
boxplot(weight~habit,
data=nc,
main="Different boxplots for each habit",
xlab="Habit",
ylab="Weight")
nc %>%
group_by(habit) %>%
summarise(weight)
nc %>%
group_by(habit) %>%
hist(weight)
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
summarise(range_weight = range(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
summarise(range_weight = range(weight))
nc %>%
group_by(habit) %>%
summarise(range_weight = range(weight))
nc %>%
group_by(habit) %>%
summarise(iqr_weight = IQR(weight))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,            alternative = "twosided", method = "theoretical")
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,            alternative = "twosided", method = "theoretical")
inference(y = weeks, data = nc, statistic = "mean", type = "ci", null = 0,            alternative = "twosided", method = "theoretical")
?inference
inference(y = weeks, data = nc, statistic = "mean", type = "ci", null = 0,            alternative = "twosided", method = "theoretical", conf_level = 0.99)
nc %>%
group_by(mature) %>%
summarise(max_age = max.col(mage))
nc %>%
group_by(mature) %>%
summarise(max_age = max(mage))
nc %>%
group_by(mature) %>%
summarise(min_age = min(mage))
?inference
??inference
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
athaism
atheism
View(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
View(atheism)
spain <- atheism %>%
filter(nationality == "Spain")
??inference
?inference
View(spain)
inference(y = response, x = year, data = spain, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
usa <- atheism %>%
filter(nationality == "United States")
inference(y = response, x = year, data = usa, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(y = response, x = year, data = usa, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist")
)
inference(y = response, x = year, data = usa, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided")
inference(y = response, x = year, data = usa, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided", null = 0.5)
inference(y = response, x = year, data = spain, statistic = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided", null = 0.5)
library("sirt")
library("mirt")
library("ggmirt")
library("ltm")
library("eRm")
library("TAM")
library("tidyverse")
library("cowplot")
library("ggplot2")
library("xlsx")
install.packages("sirt")
install.packages("sirt")
library(statsr) library(dplyr) library(ggplot2) library(GGally)
library(statsr)
library(dplyr)
library(ggplot2)
library(GGally)
install.packages(GGally)
install.packages("GGally")
library(GGally)
data(evals)
force(evals)
View(evals)
View(evals)
hist(evals$score)
mean(evals$score)
median(evals$score)
ggplot(data = evals, aes(x = bty_avg, y = score)) +   geom_point()
ggplot(data = evals, aes(x = bty_avg, y = score)) +   geom_jitter()
ggplot(data = evals, aes(x = bty_avg, y = score)) +
geom_jitter() +
geom_smooth(method = "lm")
summary(lm)
lm(score ~ bty_avg, data = evals)
model <- lm(score ~ bty_avg, data = evals)
View(model)
summary(model)
hist(model$residuals)
scatter(x = model$residuals, y = model$fitted.values)
ggplot(aes(x = model$residuals, y = model$fitted.values)) +   geom_jitter()
ggplot(x = model$residuals, y = model$fitted.values) +   geom_jitter()
ggplot(x = model$residuals, y = model$fitted.values) +   geom_jitter()
ggplot(x = model$residuals, y = model$fitted.values)) +   geom_jitter()
ggplot(x = model$residuals, y = model$fitted.values)
View(model)
ggplot(data = model, x = model$residuals, y = model$fitted.values)
ggplot(data = model, aes(x = residuals, y = fitted.values)) +   geom_jitter()
ggplot(data = model, aes(x = model$residuals, y = model$fitted.values)) +   geom_jitter()
ggplot(data = model, aes(x = model$fitted.values, y = model$residuals)) +   geom_jitter()
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals) summary(m_bty_gen)
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
hist(m_bty_gen$residuals)
View(evals)
m_bty_gen <- lm(score ~ bty_avg + rank, data = evals)
summary(m_bty_gen)
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m_full)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~ rank + gender + language + age + cls_perc_eval +      cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
m3 <- lm(score ~ rank + ethnicity + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m3)$adj.r.squared
m4 <- lm(score ~ rank + ethnicity + gender + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m4)$adj.r.squared
m5 <- lm(score ~ rank + ethnicity + gender + language + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m5)$adj.r.squared
m6 <- lm(score ~ rank + ethnicity + gender + language + age + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m6)$adj.r.squared
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m_full)
m2 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + pic_outfit + pic_color, data = evals)
summary(m2)$adj.r.squared
m3 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level+ cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m3)$adj.r.squared
m4 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m4)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + pic_outfit + pic_color, data = evals)
summary(m2)$adj.r.squared
m3 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level+ cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m3)$adj.r.squared
m4 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m4)$adj.r.squared
m3 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level+ cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m3)$adj.r.squared
m_full <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval               + cls_students + cls_level + cls_profs + cls_credits + bty_avg               + pic_outfit + pic_color, data = evals)
summary(m_full)
?kable
?table
?ggplot
??ggplot
?geom_histogram
??geom_histogram
setwd("D:/Data analysis projects/DataAnalysisProjects/Simple exploratory analysis")
